ARG CLI_IMAGE
ARG LAGOON_IMAGE_VERSION
ARG COMPOSER_AUTH
FROM ${CLI_IMAGE} as cli

FROM golang:alpine3.12 AS builder
RUN apk add --no-cache git
RUN GIT_TAG=github.com/jwilder/dockerize@v0.6.1 GIT_COMMIT=7c5cd7c34dcf1c81f6b4db132ebceabdaae17153; \
    go get -ldflags "-X=main.buildVersion=$GIT_TAG" \
    github.com/jwilder/dockerize@$GIT_COMMIT \
    && cd /go/pkg/mod/github.com/jwilder/dockerize* \
    && go mod init github.com/jwilder/dockerize \
    && go build -mod=mod -o dockerize \
    && cp dockerize /go/bin/

FROM oceaniclagoon/php-7.4-cli-drupal:${LAGOON_IMAGE_VERSION}

COPY --from=builder /go/bin/dockerize /usr/local/bin/dockerize

COPY --from=cli /app /app
COPY .docker/scripts/phpunit /app/web/profiles/contrib/govcms/.docker/phpunit
COPY .docker/scripts/lint-govcms /app/web/profiles/contrib/govcms/.docker/scripts/lint-govcms

RUN cp -r /app/web/profiles/contrib/govcms/tests /app/ \
    && echo "memory_limit=-1" >> /usr/local/etc/php/conf.d/memory.ini \
    && composer install -d /app/tests -n --ansi --prefer-dist --no-suggest \
    && rm -rf /usr/local/etc/php/conf.d/memory.ini \
    && mv /app/web/profiles/contrib/govcms/.docker/scripts/lint-govcms /usr/bin/lint-govcms \
    && chmod +x /usr/bin/lint-govcms \
    && mv /app/web/profiles/contrib/govcms/.docker/scripts/lint-theme /usr/bin/lint-theme \
    && chmod +x /usr/bin/lint-theme \
    && mv /app/web/profiles/contrib/govcms/.docker/scripts/behat /usr/bin/behat \
    && chmod +x /usr/bin/behat \
    && mv /app/web/profiles/contrib/govcms/.docker/phpunit /usr/bin/phpunit \
    && chmod +x /usr/bin/phpunit

COPY .docker/images/test/drutiny /usr/bin/drutiny

COPY .docker/images/test/phpunit/phpunit.xml /app/tests/phpunit/
COPY .docker/images/test/phpunit/bootstrap.php /app/tests/phpunit/

# Ensure MySQL client can accept server max_allowed_packet
COPY .docker/images/govcms8/mariadb-client.cnf /etc/my.cnf.d

ARG SITE_AUDIT_VERSION
RUN git clone --single-branch --branch=$SITE_AUDIT_VERSION https://github.com/govcms/audit-site.git /app/web/sites/all/drutiny \
    && php -d memory_limit=-1 /usr/local/bin/composer --working-dir=/app/web/sites/all/drutiny/ install --ignore-platform-reqs \
    && rm -Rf /app/web/sites/all/drutiny/.git \
    && chmod +x /usr/bin/drutiny

RUN mkdir -p /usr/share/ca-certificates/letsencrypt \
    && curl -o /usr/share/ca-certificates/letsencrypt/lets-encrypt-r3.crt https://letsencrypt.org/certs/lets-encrypt-r3.pem \
    && echo -e "\nletsencrypt/lets-encrypt-r3.crt" >> /etc/ca-certificates.conf \
    && update-ca-certificates

# Ensure that drush and drush.launcher both work
ENV WEBROOT=web

# Add custom drutiny profiles from test folder for local development
COPY .docker/images/test/*.yml /app/web/sites/all/drutiny/Profiles
