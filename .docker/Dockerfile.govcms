ARG LAGOON_IMAGE_VERSION

FROM oceaniclagoon/php-7.4-cli-drupal:${LAGOON_IMAGE_VERSION} as builder

ARG GOVCMS_PROJECT_VERSION
ARG DRUPAL_CORE_VERSION
ARG COMPOSER_AUTH
ARG GITHUB_TOKEN
ARG TARGETARCH

COPY composer.* /app/

# Copy base file for extensible saas.
COPY custom /app/custom

# Install jq for JSON parsing.
RUN apk add --no-cache oniguruma oniguruma-dev \
    && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \
    && cd /tmp/ \
    && wget "https://github.com/stedolan/jq/releases/download/jq-1.6/jq-1.6.tar.gz" \
    && tar -xzvf jq-1.6.tar.gz \
    && cd jq-1.6/ \
    && ./configure \
    && make \
    && make check \
    && cp jq /usr/local/bin/jq \
    && chmod +x /usr/local/bin/jq \
    && rm -rf /var/cache/apk/* /tmp/jq* \
    && apk del .phpize-deps

# Install yq for YAML parsing.
RUN wget -O /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/v4.6.3/yq_linux_${TARGETARCH}" \
  && chmod +x /usr/local/bin/yq

RUN sed -i -e "/govcms\/govcms/ s!\^1.0!${GOVCMS_PROJECT_VERSION}!" /app/composer.json \
    && sed -i -e "/drupal\/core-recommended/ s!\^8.8!${DRUPAL_CORE_VERSION}!" /app/composer.json

COPY scripts/composer/ScriptHandler.php /app/scripts/composer/ScriptHandler.php

ENV COMPOSER_MEMORY_LIMIT=-1
# Set the Github OAuth token only when the variable is set.
# Update Composer to a version which supports GitHub's new token format.
RUN composer selfupdate \
    && composer clearcache
RUN [[ ! -z "${GITHUB_TOKEN}" ]]  && composer config -g github-oauth.github.com ${GITHUB_TOKEN} || echo "Personal Github OAuth token is not set."
RUN composer install -d /app \
    && composer clearcache

COPY .docker/sanitize.sh /app/sanitize.sh

COPY .docker/images/govcms8/scripts /usr/bin/
RUN chmod 755 /usr/bin/govcms-deploy
COPY .docker/images/govcms8/govcms.site.yml /app/drush/sites/

# Ensure MySQL client can accept server max_allowed_packet
COPY .docker/images/govcms8/mariadb-client.cnf /etc/my.cnf.d

RUN mkdir -p /app/web/sites/default/files/private \
    && fix-permissions /home/.drush \
    && fix-permissions /app/drush/sites \
    && fix-permissions /etc/my.cnf.d \
    && chmod +x /app/sanitize.sh \
    && /app/sanitize.sh \
    && rm -f /app/sanitize.sh

COPY modules/ /app/web/sites/all/modules/

# Install the R3 intermediary for LE.
RUN mkdir -p /usr/share/ca-certificates/letsencrypt \
  && curl -o /usr/share/ca-certificates/letsencrypt/lets-encrypt-r3.crt https://letsencrypt.org/certs/lets-encrypt-r3.pem \
  && echo -e "\nletsencrypt/lets-encrypt-r3.crt" >> /etc/ca-certificates.conf \
  && update-ca-certificates

# Define where the Drupal Root is located
ENV WEBROOT=web
